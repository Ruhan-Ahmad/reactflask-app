{"version":3,"sources":["myComponent/Show.js","myComponent/Load.js","App.js","reportWebVitals.js","index.js"],"names":["Show","res","i","firstName","lastName","Load","useState","value","setvalue","a","fetch","result","json","data","name","useEffect","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEaA,EAAO,SAAC,GAAc,IAAbC,EAAY,EAAZA,IAAKC,EAAO,EAAPA,EACvB,OACI,gCACI,4BAAaD,EAAIE,WAARD,GACT,4BAAYD,EAAIG,UAARF,OCHPG,EAAO,WAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACEP,EAAG,uCAAG,8BAAAQ,EAAA,sEACWC,MAAM,8CADjB,cACJC,EADI,gBAESA,EAAOC,OAFhB,OAEJC,EAFI,OAGRL,EAASK,EAAKC,MAHN,2CAAH,qDASP,OAJAC,qBAAU,WACNd,MAEH,IAEC,8BACGM,EAAMS,KAAI,SAACH,EAAMX,GAAP,OACT,cAAC,EAAD,CAAMD,IAAKY,GAAWX,SCNfe,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCMWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d38fe454.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Show = ({res, i}) => {\r\n    return (\r\n        <div>\r\n            <p key ={i}>{res.firstName}</p>\r\n            <p key={i}>{res.lastName}</p>\r\n        </div>\r\n    )\r\n}\r\n","import {React, useState, useEffect} from 'react'\r\nimport { Show } from './Show'\r\n\r\nexport const Load = () => {\r\n    const [value, setvalue] = useState([])\r\n  let res = async() =>{\r\n    let result = await fetch('https://flask-react-app1.herokuapp.com/api')\r\n    let data = await result.json()\r\n    setvalue(data.name)\r\n  }\r\n  useEffect(() => {\r\n      res()\r\n    }\r\n  ,[])\r\n  return (\r\n    <div>\r\n      {value.map((data, i)=>(\r\n        <Show res={data} key={i} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\nimport { Load } from './myComponent/Load';\n\nfunction App() {\n  return (\n    <>\n    <Load />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}